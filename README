# OS Learning with xv6-riscv

This repository is a **personal learning project** based on MIT's xv6-riscv (https://github.com/mit-pdos/xv6-riscv).  
I am using it to **experiment with operating system concepts**, including system calls, memory management, process scheduling, and user programs.

## Features / Experiments

- Added a custom syscall `hello()` that prints a message from the kernel.
- Created user programs to test new system calls.
- Experimenting with tracing memory allocation and process scheduling.
- Learning kernel/user interaction, traps, and system call dispatch.

## Notes

- This is for **educational purposes only**.  
- All modifications are for learning OS concepts and are tracked in separate branches.

## How to Build and Run

```bash
# Build xv6
make

# Run in QEMU
make qemu